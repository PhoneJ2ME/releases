#
# @(#)linux_qte.gmk	1.12 06/05/15 @(#)
#
# Copyright  1990-2006 Sun Microsystems, Inc. All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License version
# 2 only, as published by the Free Software Foundation. 
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License version 2 for more details (a copy is
# included at /legal/license.txt). 
# 
# You should have received a copy of the GNU General Public License
# version 2 along with this work; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA 
# 
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa
# Clara, CA 95054 or visit www.sun.com if you need additional
# information or have any questions. 
# 
# This source file is specific for Qt-based configurations.
#
######################################################################
#
# Subsystem's PLATFORM Configuration file
#
######################################################################

# Message pool implementation directory
POOL_IMPL_DIR = ram_pool

vpath % $(JSR_120_DIR)/src/core/common/native/$(POOL_IMPL_DIR)
vpath % $(JSR_120_DIR)/src/core/common/native/linux_qte
vpath % $(JSR_120_DIR)/src/protocol/sms/native/linux_qte
vpath % $(JSR_120_DIR)/src/protocol/cbs/native/linux_qte

QT_CFLAGS=-pipe -fno-exceptions -fno-rtti -W -Wall
#
MODULE_AMS_EXAMPLE_EXTRA_INCLUDES += \
    -I$(JSR_120_DIR)/src/core/common/native/linux_qte/inc

#
SUBSYSTEM_JSR_120_NATIVE_FILES += \
        jsr120_sms_pool.c \
        jsr120_cbs_pool.c \
	smsProtocol_linux_qte.c \
	cbsProtocol_linux_qte.c \
	wmaSocket.cpp \
	wmaUDPEmulator.cpp

#
SUBSYSTEM_JSR_120_EXTRA_INCLUDES += \
    -I$(JSR_120_DIR)/src/protocol/sms/native/share/inc \
    -I$(JSR_120_DIR)/src/protocol/cbs/native/share/inc \
    -I$(JSR_120_DIR)/src/core/common/native/linux_qte/inc \
    -I$(JSR_120_DIR)/src/core/common/native/share/inc \
    -I$(QTOPIA_SDK_DIR)/include

#
# Uses the global MIDP_OUTPUT_DIR as the outcome directory
#
$(MIDP_OUTPUT_DIR)/moc_%.cpp: $(JSR_120_DIR)/src/core/common/native/linux_qte/inc/%.h
	@echo Creating ... $@ using MOC $(LOG_ONLY)
	@echo +++ $(QTOPIA_SDK_DIR)/bin/moc -i $< -o $@ $(LOG_ONLY)
	@(cd $(MIDP_OUTPUT_DIR); $(QTOPIA_SDK_DIR)/bin/moc -i $< -o $@) $(LOG)
#
$(OBJ_DIR)/wmaSocket.o: wmaSocket.cpp $(MIDP_OUTPUT_DIR)/moc_wmaSocket.cpp
	@echo " ... $@" $(LOG)
	@echo +++ $(CPP) $(CPPFLAGS) -c $(CC_OUTPUT)$@ $< $(LOG_ONLY)
	@$(CPP) $(CPPFLAGS) $(QT_CFLAGS) -c $(CC_OUTPUT)$@ `$(call fixcygpath, $<)` $(LOG)
#
$(OBJ_DIR)/wmaUDPEmulator.o: wmaUDPEmulator.cpp
	@echo " ... $@" $(LOG)
	@echo +++ $(CPP) $(CPPFLAGS) -c $(CC_OUTPUT)$@ $< $(LOG_ONLY)
	@$(CPP) $(CPPFLAGS) $(QT_CFLAGS) -c $(CC_OUTPUT)$@ `$(call fixcygpath, $<)` $(LOG)

